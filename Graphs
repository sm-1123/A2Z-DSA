---------------------------date:24/06/2024---------------------------------------------------

P1:Floyd Warshall[TC:O(V^3),SC:O(V^2)]

def floydWarshall(n, m, src, dest, edges):

    dist = [[1000000000] * n for _ in range(n)]

    for i in range(n):

        dist[i][i] = 0

    for i in range(m):

        u, v, w = edges[i]

        dist[u - 1][v - 1] = w            

    for k in range(n):

        for i in range(n):

            for j in range(n):

                if dist[i][k] != 1000000000 and dist[k][j] != 1000000000:

                    dist[i][j] = min(dist[i][j], dist[i][k] + dist[k][j])

    return dist[src - 1][dest - 1]    

    # Write your code here.

-----------------------------------date:25/06/2024---------------------------------------------

P2:Bellman Ford[TC:O(V*E), SC:O(V)]

def bellmonFord(n, m, src, edges):
    # Write your code here.
    dist = [100000000] * (n + 1)

    dist[src] = 0

    for i in range(1, n):

        for j in range(m):

            u = edges[j][0]

            v = edges[j][1]

            w = edges[j][2]

            if dist[u] + w < dist[v]:

                dist[v] = dist[u] + w   

    return dist
    


